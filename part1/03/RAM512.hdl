// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/b/RAM512.hdl
/**
 * Memory of 512 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    //// Replace this comment with your code.
    DMux8Way(in=load , sel=address[6..8] , a=ram640load , b=ram641load , c=ram642load , d=ram643load , e=ram644load , f=ram645load , g=ram646load , h=ram647load );
    RAM64(in=in , load=ram640load , address=address[0..5] , out=ram640 );
    RAM64(in=in , load=ram641load , address=address[0..5] , out=ram641 );
    RAM64(in=in , load=ram642load , address=address[0..5] , out=ram642 );
    RAM64(in=in , load=ram643load , address=address[0..5] , out=ram643 );
    RAM64(in=in , load=ram644load , address=address[0..5] , out=ram644 );
    RAM64(in=in , load=ram645load , address=address[0..5] , out=ram645 );
    RAM64(in=in , load=ram646load , address=address[0..5] , out=ram646 );
    RAM64(in=in , load=ram647load , address=address[0..5] , out=ram647 );
    Mux8Way16(a=ram640 , b=ram641 , c=ram642 , d=ram643 , e=ram644 , f=ram645 , g=ram646 , h=ram647 , sel=address[6..8] , out=out );
}